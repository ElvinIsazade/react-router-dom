{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\OneDrive\\\\Desktop\\\\react-router-dom\\\\frontend\\\\src\\\\pages\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  // if(events) {\n  //     <p>{events}</p>\n  // }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(Events, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Events;\nexport default Events;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"Could not fetched\"\n    };\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useLoaderData","EventsList","jsxDEV","_jsxDEV","Events","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","isError","message","resData","json","$RefreshReg$"],"sources":["C:/Users/HUAWEI/OneDrive/Desktop/react-router-dom/frontend/src/pages/Events.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nconst Events = () => {\r\n    const data = useLoaderData();\r\n    const events = data.events\r\n    // if(events) {\r\n    //     <p>{events}</p>\r\n    // }\r\n    return (\r\n        <EventsList events={events} />\r\n    )\r\n}\r\n\r\nexport default Events;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        return {isError: true,message: \"Could not fetched\"}\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData\r\n    }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B;EACA;EACA;EACA,oBACIJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAEtC,CAAC;AAAAN,EAAA,CATKD,MAAM;EAAA,QACKJ,aAAa;AAAA;AAAAY,EAAA,GADxBR,MAAM;AAWZ,eAAeA,MAAM;AAErB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,OAAO;MAACC,OAAO,EAAE,IAAI;MAACC,OAAO,EAAE;IAAmB,CAAC;EACvD,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IACrC,OAAOD,OAAO;EAClB;AACJ;AAAC,IAAAP,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}